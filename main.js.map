{"version":3,"sources":["../src/js/main.js"],"names":["cardStorage","window","localStorage","cardList","html","document","getElementsByTagName","create","getElementById","modal","modalCloses","querySelectorAll","form","injectfield","doctorselect","save","dashboard","removeFields","fields","Array","from","getElementsByClassName","length","forEach","el","remove","closeModal","classList","elements","reset","addEventListener","add","e","doctor","target","value","doctorFields","Visit","dropdownFields","find","name","field","createElement","type","innerHTML","title","id","placeholder","after","newCard","fd","fromUser","card","visitname","CardioVisit","date","fullname","purpose","commentary","pressure","bmiindex","heartdiseases","age","addCardioFields","DentistVisit","lastvisit","addDentistFields","TherapistVisit","addTherapistFields","push","setItem","JSON","stringify","draw","reportValidity","formIter","FormData","formData","entries","key","val","element","onclick","onClick","bind","style","cursor","contains","idx","parentNode","children","indexOf","splice","preventDefault","innerText","previousSibling","toggle","appendChild","fieldContainer","basicCard","showMore","querySelector","before","loadCards","cards","getItem","parse"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,cAAcC,OAAOC,YAA3B;AACA,IAAIC,WAAW,EAAf;;AAEA,IAAMC,OAAOC,SAASC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAb;AACA,IAAMC,SAASF,SAASG,cAAT,CAAwB,YAAxB,CAAf;AACA,IAAMC,QAAQJ,SAASG,cAAT,CAAwB,YAAxB,CAAd;AACA,IAAME,cAAcL,SAASM,gBAAT,CAA0B,2EAA1B,CAApB;AACA,IAAMC,OAAOP,SAASG,cAAT,CAAwB,YAAxB,CAAb;AACA,IAAMK,cAAcR,SAASG,cAAT,CAAwB,aAAxB,CAApB;AACA,IAAMM,eAAeT,SAASG,cAAT,CAAwB,eAAxB,CAArB;AACA,IAAMO,OAAOV,SAASG,cAAT,CAAwB,MAAxB,CAAb;AACA,IAAMQ,YAAYX,SAASG,cAAT,CAAwB,WAAxB,CAAlB;;AAEA,IAAMS,eAAe,SAAfA,YAAe,GAAM;AACzB,MAAIC,SAASC,MAAMC,IAAN,CAAWf,SAASgB,sBAAT,CAAgC,iBAAhC,CAAX,CAAb;AACF,MAAIH,OAAOI,MAAP,KAAkB,CAAtB,EAAyB;AACvBJ,WAAOK,OAAP,CAAe;AAAA,aAAMC,GAAGC,MAAH,EAAN;AAAA,KAAf;AACC;AACF,CALD;;AAOA,IAAMC,aAAa,SAAbA,UAAa,GAAM;AACvBjB,QAAMkB,SAAN,CAAgBF,MAAhB,CAAuB,WAAvB;AACArB,OAAKuB,SAAL,CAAeF,MAAf,CAAsB,YAAtB;AACAN,QAAMC,IAAN,CAAWR,KAAKgB,QAAhB,EAA0BL,OAA1B,CAAkC;AAAA,WAAMC,GAAGG,SAAH,CAAaF,MAAb,CAAoB,WAApB,CAAN;AAAA,GAAlC;AACAb,OAAKiB,KAAL;AACAZ;AACD,CAND;;AAQAV,OAAOuB,gBAAP,CAAwB,OAAxB,EAAiC,YAAM;AACrCrB,QAAMkB,SAAN,CAAgBI,GAAhB,CAAoB,WAApB;AACA3B,OAAKuB,SAAL,CAAeI,GAAf,CAAmB,YAAnB;AACD,CAHD;;AAKArB,YAAYa,OAAZ,CAAoB;AAAA,SAAMC,GAAGM,gBAAH,CAAoB,OAApB,EAA6BJ,UAA7B,CAAN;AAAA,CAApB;;AAEAZ,aAAagB,gBAAb,CAA8B,QAA9B,EAAwC,UAACE,CAAD,EAAO;AAAA,MACxBC,MADwB,GACbD,CADa,CACxCE,MADwC,CAC/BC,KAD+B;;;AAG7C,MAAMC,eAAeC,MAAMC,cAAN,GAAuBC,IAAvB,CAA4B;AAAA,WAAMN,WAAWT,GAAGgB,IAApB;AAAA,GAA5B,EAAsDtB,MAA3E;AACAD;;AAEAmB,eAAab,OAAb,CAAqB,cAAM;AACzB,QAAIkB,QAAQpC,SAASqC,aAAT,CAAuB,KAAvB,CAAZ;AACAD,UAAMd,SAAN,CAAgBI,GAAhB,CAAoB,OAApB,EAA6B,WAA7B;;AAEA,QAAIP,GAAGmB,IAAH,KAAY,OAAhB,EAAyB;AACzBF,YAAMG,SAAN,6BAA0CpB,GAAGqB,KAA7C,sHAEmDrB,GAAGsB,EAFtD,mCAEsFtB,GAAGuB,WAFzF;;AAKElC,kBAAYmC,KAAZ,CAAkBP,KAAlB;AACD,KAPD,MAOO,IAAIjB,GAAGmB,IAAH,KAAY,MAAhB,EAAwB;AAC7BF,YAAMG,SAAN,6BAA0CpB,GAAGqB,KAA7C,0HAEmDrB,GAAGsB,EAFtD;AAIAjC,kBAAYmC,KAAZ,CAAkBP,KAAlB;AACD;AACF,GAlBD;AAoBD,CA1BD;;AA4BA,IAAMQ,UAAU,SAAVA,OAAU,CAACC,EAAD,EAAyB;AAAA,MAApBC,QAAoB,uEAAT,IAAS;;AACvC,MAAIC,aAAJ;AACA,MAAIF,GAAGG,SAAH,KAAiB,cAArB,EAAqC;AACnCD,WAAO,IAAIE,WAAJ,CAAgBJ,GAAGG,SAAnB,EAA8BH,GAAGK,IAAjC,EAAuCL,GAAGM,QAA1C,EAAoDN,GAAGO,OAAvD,EAAgEP,GAAGQ,UAAnE,EAA+ER,GAAGS,QAAlF,EAA4FT,GAAGU,QAA/F,EAAyGV,GAAGW,aAA5G,EAA2HX,GAAGY,GAA9H,CAAP;AACAV,SAAKW,eAAL;AACD,GAHD,MAGO,IAAIb,GAAGG,SAAH,KAAiB,SAArB,EAAgC;AACrCD,WAAO,IAAIY,YAAJ,CAAiBd,GAAGG,SAApB,EAA+BH,GAAGK,IAAlC,EAAwCL,GAAGM,QAA3C,EAAqDN,GAAGO,OAAxD,EAAiEP,GAAGQ,UAApE,EAAgFR,GAAGe,SAAnF,CAAP;AACAb,SAAKc,gBAAL;AACD,GAHM,MAGA,IAAIhB,GAAGG,SAAH,KAAiB,WAArB,EAAkC;AACvCD,WAAO,IAAIe,cAAJ,CAAmBjB,GAAGG,SAAtB,EAAiCH,GAAGK,IAApC,EAA0CL,GAAGM,QAA7C,EAAuDN,GAAGO,OAA1D,EAAmEP,GAAGQ,UAAtE,EAAkFR,GAAGY,GAArF,CAAP;AACAV,SAAKgB,kBAAL;AACD;AACD,MAAIjB,QAAJ,EAAc;AACZhD,aAASkE,IAAT,CAAcnB,EAAd;AACAlD,gBAAYsE,OAAZ,CAAoB,OAApB,EAA6BC,KAAKC,SAAL,CAAerE,QAAf,CAA7B;AACD;AACDiD,OAAKqB,IAAL;AACD,CAjBD;;AAmBA1D,KAAKe,gBAAL,CAAsB,OAAtB,EAA+B,YAAM;AACnCX,QAAMC,IAAN,CAAWR,KAAKgB,QAAhB,EAA0BL,OAA1B,CAAmC;AAAA,WAAMC,GAAGM,gBAAH,CAAoB,SAApB,EAA+B,UAACE,CAAD;AAAA,aAAOA,EAAEE,MAAF,CAASP,SAAT,CAAmBI,GAAnB,CAAuB,WAAvB,CAAP;AAAA,KAA/B,CAAN;AAAA,GAAnC;;AAEA,MAAInB,KAAK8D,cAAL,EAAJ,EAA2B;AACzB,QAAIC,WAAW,IAAIC,QAAJ,CAAahE,IAAb,CAAf;AACA,QAAIiE,WAAW,EAAf;AAFyB;AAAA;AAAA;;AAAA;AAGzB,2BAAsBF,SAASG,OAAT,EAAtB,8HAA0C;AAAA;AAAA,YAAhCC,GAAgC;AAAA,YAA5BC,GAA4B;;AACxCH,iBAASE,GAAT,IAAgBC,GAAhB;AACD;AALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMzB/B,YAAQ4B,QAAR;AACAnD;AACD;AACF,CAZD;;IAcMW,K;AACJ,iBAAYgB,SAAZ,EAAuBE,IAAvB,EAA6BC,QAA7B,EAAuCC,OAAvC,EAAgDC,UAAhD,EAA4D;AAAA;;AAC1D,SAAKL,SAAL,GAAiBA,SAAjB;AACA,SAAKE,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;;AAEA,SAAKuB,OAAL,GAAe5E,SAASqC,aAAT,CAAuB,KAAvB,CAAf;AACA,SAAKuC,OAAL,CAAatD,SAAb,CAAuBI,GAAvB,CAA2B,MAA3B,EAAmC,WAAnC;AACA,SAAKkD,OAAL,CAAarC,SAAb,+EAEiC,KAAKa,OAFtC,gPASiC,KAAKD,QATtC,wDAUqC,KAAKH,SAV1C;AAcE,SAAK4B,OAAL,CAAaC,OAAb,GAAuB,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAvB;AACA,SAAKH,OAAL,CAAaI,KAAb,CAAmBC,MAAnB,GAA4B,SAA5B;AACH;;QAEMhD,c,6BAAiB;AACtB,WAAO,CAAC,EAAC,QAAQ,cAAT;AACA,gBAAU,CAAC,EAAC,MAAM,eAAP;AACC,iBAAS,gBADV;AAEC,uBAAe,QAFhB;AAGC,gBAAQ,OAHT,EAAD,EAIE,EAAC,MAAM,UAAP;AACA,uBAAe,MADf;AAEA,iBAAS,gBAFT;AAGA,gBAAQ,OAHR,EAJF,EAQE,EAAC,MAAM,eAAP;AACA,uBAAe,mBADf;AAEA,iBAAS,gBAFT;AAGA,gBAAQ,OAHR,EARF,EAYE,EAAC,MAAM,KAAP;AACA,uBAAe,IADf;AAEA,iBAAS,KAFT;AAGA,gBAAQ,OAHR,EAZF,CADV,EAAD,EAkBC,EAAC,QAAO,SAAR;AACA,gBAAU,CAAC,EAAC,MAAM,WAAP;AACC,iBAAS,oBADV;AAEC,gBAAQ,MAFT,EAAD,CADV,EAlBD,EAsBC,EAAC,QAAQ,WAAT;AACA,gBAAU,CAAC,EAAC,MAAM,KAAP;AACC,uBAAe,IADhB;AAEC,iBAAS,KAFV;AAGC,gBAAQ,OAHT,EAAD,CADV,EAtBD,CAAP;AA4BD,G;;kBAED6C,O,oBAAQnD,C,EAAG;AACT,QAAIA,EAAEE,MAAF,CAASP,SAAT,CAAmB4D,QAAnB,CAA4B,QAA5B,CAAJ,EAA2C;AACzC,UAAIC,MAAMrE,MAAMC,IAAN,CAAWY,EAAEE,MAAF,CAASuD,UAAT,CAAoBC,QAA/B,EAAyCC,OAAzC,CAAiD3D,EAAEE,MAAnD,CAAV;AACA/B,eAASyF,MAAT,CAAgBJ,GAAhB,EAAqB,CAArB;AACAxF,kBAAYsE,OAAZ,CAAoB,OAApB,EAA6BC,KAAKC,SAAL,CAAerE,QAAf,CAA7B;AACA,WAAK8E,OAAL,CAAaxD,MAAb;AACC,KALH,MAKS,IAAIO,EAAEE,MAAF,CAASP,SAAT,CAAmB4D,QAAnB,CAA4B,gBAA5B,CAAJ,EAAmD;AACxDvD,QAAE6D,cAAF;AACA7D,QAAEE,MAAF,CAAS4D,SAAT,KAAuB,cAAvB,GAAwC9D,EAAEE,MAAF,CAAS4D,SAAT,GAAqB,cAA7D,GAA8E9D,EAAEE,MAAF,CAAS4D,SAAT,GAAqB,cAAnG;AACA9D,QAAEE,MAAF,CAAS6D,eAAT,CAAyBpE,SAAzB,CAAmCqE,MAAnC,CAA0C,WAA1C;AACD;AACF,G;;kBAEHvB,I,mBAAO;AACLzD,cAAUiF,WAAV,CAAsB,KAAKhB,OAA3B;AACD,G;;;;;IAGG3B,W;;;AACJ,uBAAYD,SAAZ,EAAuBE,IAAvB,EAA6BC,QAA7B,EAAuCC,OAAvC,EAAgDC,UAAhD,EAA4DC,QAA5D,EAAsEC,QAAtE,EAAgFC,aAAhF,EAA+FC,GAA/F,EAAoG;AAAA;;AAAA,iDAClG,kBAAMT,SAAN,EAAiBE,IAAjB,EAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,UAA1C,CADkG;;AAElG,UAAKL,SAAL,GAAiB,cAAjB;AACA,UAAKM,QAAL,GAAgBA,QAAhB;AACA,UAAKC,QAAL,GAAgBA,QAAhB;AACA,UAAKC,aAAL,GAAqBA,aAArB;AACA,UAAKC,GAAL,GAAWA,GAAX;AANkG;AAOnG;;wBAEDC,e,8BAAkB;AAChB,QAAMmC,iBAAiB7F,SAASqC,aAAT,CAAuB,KAAvB,CAAvB;AACAwD,mBAAevE,SAAf,CAAyBI,GAAzB,CAA6B,mBAA7B,EAAkD,WAAlD;AACAmE,mBAAetD,SAAf,mFACuE,KAAKe,QAD5E,sFAEmE,KAAKC,QAFxE,2FAGwE,KAAKC,aAH7E,gFAI6D,KAAKC,GAJlE,0FAKuE,KAAKP,IAL5E,mEAMgD,KAAKG,UANrD;AAQA,QAAMyC,YAAY,KAAKlB,OAAvB;AACA,QAAMmB,WAAWD,UAAUE,aAAV,CAAwB,4CAAxB,CAAjB;AACAD,aAASE,MAAT,CAAgBJ,cAAhB;AACD,G;;;EAxBuB7D,K;;IA2BpB2B,Y;;;AACJ,wBAAYX,SAAZ,EAAuBE,IAAvB,EAA6BC,QAA7B,EAAuCC,OAAvC,EAAgDC,UAAhD,EAA4DO,SAA5D,EAAuE;AAAA;;AAAA,kDACrE,mBAAMZ,SAAN,EAAiBE,IAAjB,EAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,UAA1C,CADqE;;AAErE,WAAKL,SAAL,GAAiB,SAAjB;AACA,WAAKY,SAAL,GAAiBA,SAAjB;AAHqE;AAItE;;yBAEDC,gB,+BAAmB;AACjB,QAAMgC,iBAAiB7F,SAASqC,aAAT,CAAuB,KAAvB,CAAvB;AACAwD,mBAAevE,SAAf,CAAyBI,GAAzB,CAA6B,mBAA7B,EAAkD,WAAlD;AACAmE,mBAAetD,SAAf,uFAC2E,KAAKqB,SADhF,4FAEyE,KAAKV,IAF9E,qEAGkD,KAAKG,UAHvD;AAKA,QAAMyC,YAAY,KAAKlB,OAAvB;AACA,QAAMmB,WAAWD,UAAUE,aAAV,CAAwB,4CAAxB,CAAjB;AACAD,aAASE,MAAT,CAAgBJ,cAAhB;AACD,G;;;EAlBwB7D,K;;IAqBrB8B,c;;;AACJ,0BAAYd,SAAZ,EAAuBE,IAAvB,EAA6BC,QAA7B,EAAuCC,OAAvC,EAAgDC,UAAhD,EAA4DI,GAA5D,EAAiE;AAAA;;AAAA,kDAC/D,mBAAMT,SAAN,EAAiBE,IAAjB,EAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,UAA1C,CAD+D;;AAE/D,WAAKL,SAAL,GAAiB,WAAjB;AACA,WAAKS,GAAL,GAAWA,GAAX;AAH+D;AAIhE;;2BAEDM,kB,iCAAqB;AACnB,QAAM8B,iBAAiB7F,SAASqC,aAAT,CAAuB,KAAvB,CAAvB;AACAwD,mBAAevE,SAAf,CAAyBI,GAAzB,CAA6B,mBAA7B,EAAkD,WAAlD;AACAmE,mBAAetD,SAAf,2EAC+D,KAAKkB,GADpE,4FAEyE,KAAKP,IAF9E,sFAGmE,KAAKG,UAHxE;AAKA,QAAMyC,YAAY,KAAKlB,OAAvB;AACA,QAAMmB,WAAWD,UAAUE,aAAV,CAAwB,4CAAxB,CAAjB;AACAD,aAASE,MAAT,CAAgBJ,cAAhB;AACD,G;;;EAlB0B7D,K;;AAqB7B;;AAEA,IAAMkE,YAAa,YAAM;AACvB,MAAIC,QAAQxG,YAAYyG,OAAZ,CAAoB,OAApB,CAAZ;AACAtG,aAAWoE,KAAKmC,KAAL,CAAWF,KAAX,CAAX;AACArG,WAASoB,OAAT,CAAiB;AAAA,WAAQ0B,QAAQG,IAAR,EAAc,KAAd,CAAR;AAAA,GAAjB;AACD,CAJiB,EAAlB","file":"main.js","sourcesContent":["const cardStorage = window.localStorage;\nlet cardList = [];\n\nconst html = document.getElementsByTagName('html')[0];\nconst create = document.getElementById('create-btn');\nconst modal = document.getElementById('card-modal');\nconst modalCloses = document.querySelectorAll('.modal-background, .modal-card-head > .delete, .modal-card-foot > .cancel');\nconst form = document.getElementById('modal-form');\nconst injectfield = document.getElementById('first-field');\nconst doctorselect = document.getElementById('doctor-select');\nconst save = document.getElementById('save');\nconst dashboard = document.getElementById('dashboard')\n\nconst removeFields = () => {\n  let fields = Array.from(document.getElementsByClassName('field generated'));\nif (fields.length !== 0) {\n  fields.forEach(el => el.remove());\n  }\n}\n\nconst closeModal = () => {\n  modal.classList.remove('is-active');\n  html.classList.remove('is-clipped');\n  Array.from(form.elements).forEach(el => el.classList.remove('is-danger'));\n  form.reset();\n  removeFields();\n}\n\ncreate.addEventListener('click', () => {\n  modal.classList.add('is-active');\n  html.classList.add('is-clipped');\n})\n\nmodalCloses.forEach(el => el.addEventListener('click', closeModal));\n\ndoctorselect.addEventListener('change', (e) => {\n  let {target: {value: doctor}} = e;\n\n  const doctorFields = Visit.dropdownFields().find(el => doctor === el.name).fields;\n  removeFields(); \n  \n  doctorFields.forEach(el => {\n    let field = document.createElement('div');\n    field.classList.add('field', 'generated');\n\n    if (el.type === 'field') {\n    field.innerHTML = `<label class=\"label\">${el.title}</label>\n                        <div class=\"control\">\n                          <input class=\"input\" name=\"${el.id}\" type=\"text\" placeholder=\"${el.placeholder}\" required>\n                        </div>`\n\n      injectfield.after(field);\n    } else if (el.type === 'date') {\n      field.innerHTML = `<label class=\"label\">${el.title}</label>\n                          <div class=\"control\">\n                            <input class=\"input\" name=\"${el.id}\" type=\"date\" required>\n                          </div>`\n      injectfield.after(field);\n    }\n  })\n\n});\n\nconst newCard = (fd, fromUser = true) => {\n  let card;\n  if (fd.visitname === 'Cardiologist') {\n    card = new CardioVisit(fd.visitname, fd.date, fd.fullname, fd.purpose, fd.commentary, fd.pressure, fd.bmiindex, fd.heartdiseases, fd.age);\n    card.addCardioFields();\n  } else if (fd.visitname === 'Dentist') {\n    card = new DentistVisit(fd.visitname, fd.date, fd.fullname, fd.purpose, fd.commentary, fd.lastvisit);\n    card.addDentistFields();\n  } else if (fd.visitname === 'Therapist') {\n    card = new TherapistVisit(fd.visitname, fd.date, fd.fullname, fd.purpose, fd.commentary, fd.age);\n    card.addTherapistFields();\n  }\n  if (fromUser) {\n    cardList.push(fd);\n    cardStorage.setItem(\"cards\", JSON.stringify(cardList));\n  }\n  card.draw();\n}\n\nsave.addEventListener('click', () => {\n  Array.from(form.elements).forEach (el => el.addEventListener('invalid', (e) => e.target.classList.add('is-danger')));\n\n  if (form.reportValidity()) {\n    let formIter = new FormData(form);\n    let formData = {}\n    for (let [key,val] of formIter.entries()) {\n      formData[key] = val;\n    }\n    newCard(formData);\n    closeModal();\n  }\n})\n\nclass Visit {\n  constructor(visitname, date, fullname, purpose, commentary) {\n    this.visitname = visitname;\n    this.date = date;\n    this.fullname = fullname;\n    this.purpose = purpose;\n    this.commentary = commentary;\n\n    this.element = document.createElement('div');\n    this.element.classList.add('card', 'card-size');\n    this.element.innerHTML = `\n    <header class=\"card-header\">\n      <p class=\"card-header-title\">${this.purpose}</p>\n      <span class=\"card-header-icon\">\n        <button class=\"delete\" aria-label=\"close\"></button>\n      </span>\n    </header>\n    <div class=\"card-content\">\n      <div class=\"content\">\n        <span class=\"pacient-name\">${this.fullname}</span>\n        <span class=\"doctor-visitname\">${this.visitname}</span>\n        <a href=\"#\" class=\"card-header-icon show-more-link\" aria-label=\"more options\">\n          Show more...</a>\n      </div>`\n      this.element.onclick = this.onClick.bind(this);\n      this.element.style.cursor = 'pointer';\n  }\n\n  static dropdownFields() {\n    return [{'name': 'Cardiologist',\n            'fields': [{'id': 'heartpressure',\n                        'title': 'Heart Pressure',\n                        'placeholder': '120/80',\n                        'type': 'field'},\n                        {'id': 'bmiindex',\n                        'placeholder': '1.28',\n                        'title': 'Your BMI Index',\n                        'type': 'field'},\n                        {'id': 'heartdiseases',\n                        'placeholder': 'Names of diseases',\n                        'title': 'Heart Diseases',\n                        'type': 'field'},\n                        {'id': 'age',\n                        'placeholder': '18',\n                        'title': 'Age',\n                        'type': 'field'}\n                      ]},\n            {'name':'Dentist',\n            'fields': [{'id': 'lastvisit',\n                        'title': 'Date of Last Visit',\n                        'type': 'date'}]},\n            {'name': 'Therapist',\n            'fields': [{'id': 'age',\n                        'placeholder': '18',\n                        'title': 'Age',\n                        'type': 'field'}]}\n            ]\n  }\n\n  onClick(e) {\n    if (e.target.classList.contains('delete')) {\n      let idx = Array.from(e.target.parentNode.children).indexOf(e.target);\n      cardList.splice(idx, 1);\n      cardStorage.setItem(\"cards\", JSON.stringify(cardList));\n      this.element.remove();\n      } else if (e.target.classList.contains('show-more-link')) {\n        e.preventDefault();\n        e.target.innerText === 'Show more...' ? e.target.innerText = 'Show less...' : e.target.innerText = 'Show more...'\n        e.target.previousSibling.classList.toggle('is-hidden');\n      }\n    }\n\n  draw() {\n    dashboard.appendChild(this.element);\n  }\n}\n\nclass CardioVisit extends Visit {\n  constructor(visitname, date, fullname, purpose, commentary, pressure, bmiindex, heartdiseases, age) {\n    super(visitname, date, fullname, purpose, commentary);\n    this.visitname = 'Cardiologist'\n    this.pressure = pressure;\n    this.bmiindex = bmiindex;\n    this.heartdiseases = heartdiseases;\n    this.age = age;\n  }\n\n  addCardioFields() {\n    const fieldContainer = document.createElement('div');\n    fieldContainer.classList.add('additional-fields', 'is-hidden');\n    fieldContainer.innerHTML = `\n              <span class=\"doctor-field\"><strong>Heart Pressure:</strong>${this.pressure}</span>\n              <span class=\"doctor-field\"><strong>BMI Index:</strong> ${this.bmiindex}</span>\n              <span class=\"doctor-field\"><strong>Heart Diseases:</strong> ${this.heartdiseases}</span>\n              <span class=\"doctor-field\"><strong>Age:</strong> ${this.age}</span>\n              <span class=\"doctor-field\"><strong>Date of Visit:</strong> ${this.date}</span>\n              <span class=\"doctor-field\">Comment: ${this.commentary}</span>\n  `\n    const basicCard = this.element;\n    const showMore = basicCard.querySelector('.card-content > .content > .show-more-link');\n    showMore.before(fieldContainer);\n  }\n}\n\nclass DentistVisit extends Visit {\n  constructor(visitname, date, fullname, purpose, commentary, lastvisit) {\n    super(visitname, date, fullname, purpose, commentary);\n    this.visitname = 'Dentist'\n    this.lastvisit = lastvisit;\n  }\n\n  addDentistFields() {\n    const fieldContainer = document.createElement('div');\n    fieldContainer.classList.add('additional-fields', 'is-hidden');\n    fieldContainer.innerHTML = `\n                <span class=\"doctor-field\"><strong>Last Visit Date:</strong> ${this.lastvisit}</span>\n                <span class=\"doctor-field\"><strong>Date of Visit:</strong> ${this.date}</span>\n                <span class=\"doctor-field\">Comment: ${this.commentary}</span>\n    `\n    const basicCard = this.element;\n    const showMore = basicCard.querySelector('.card-content > .content > .show-more-link');\n    showMore.before(fieldContainer);\n  }\n}\n\nclass TherapistVisit extends Visit {\n  constructor(visitname, date, fullname, purpose, commentary, age) {\n    super(visitname, date, fullname, purpose, commentary);\n    this.visitname = 'Therapist'\n    this.age = age;\n  }\n\n  addTherapistFields() {\n    const fieldContainer = document.createElement('div');\n    fieldContainer.classList.add('additional-fields', 'is-hidden');\n    fieldContainer.innerHTML = `\n                <span class=\"doctor-field\"><strong>Age:</strong> ${this.age}</span>\n                <span class=\"doctor-field\"><strong>Date of Visit:</strong> ${this.date}</span>\n                <span class=\"doctor-field\"><strong>Comment:</strong> ${this.commentary}</span>\n    `\n    const basicCard = this.element;\n    const showMore = basicCard.querySelector('.card-content > .content > .show-more-link');\n    showMore.before(fieldContainer);\n  }\n}\n\n//Load cards from local storage;\n\nconst loadCards = (() => {\n  let cards = cardStorage.getItem('cards');\n  cardList = JSON.parse(cards)\n  cardList.forEach(card => newCard(card, false));\n}\n)();"]}