{"version":3,"sources":["../src/js/main.js"],"names":["html","document","getElementsByTagName","create","getElementById","modal","modalCloses","querySelectorAll","form","injectfield","doctorselect","save","dashboard","removeFields","fields","Array","from","getElementsByClassName","length","forEach","el","remove","closeModal","classList","reset","addEventListener","add","dropdownFields","e","doctor","target","value","obj","find","name","prop","field","createElement","innerHTML","after","newCard","fd","card","visitname","CardioVisit","date","fullname","purpose","commentary","pressure","bmiindex","heartdiseases","age","DentistVisit","lastvisit","TherapistVisit","draw","reportValidity","formIter","FormData","formData","entries","key","val","Visit","element","onclick","onClick","bind","style","cursor","contains","appendChild"],"mappings":"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","file":"main.js","sourcesContent":["// document.addEventListener('DOMContentLoaded', () => {\n//   console.log('Hello Bulma!');\n// });\n\n\nconst html = document.getElementsByTagName('html')[0];\nconst create = document.getElementById('create-btn');\nconst modal = document.getElementById('card-modal');\nconst modalCloses = document.querySelectorAll('.modal-background, .modal-card-head > .delete, .modal-card-foot > .cancel');\nconst form = document.getElementById('modal-form');\nconst injectfield = document.getElementById('first-field');\nconst doctorselect = document.getElementById('doctor-select');\nconst save = document.getElementById('save');\nconst dashboard = document.getElementById('dashboard')\n\nconst removeFields = () => {\n  let fields = Array.from(document.getElementsByClassName('field generated'));\nif (fields.length !== 0) {\n  fields.forEach(el => el.remove());\n  }\n}\n\nconst closeModal = () => {\n  modal.classList.remove('is-active');\n  html.classList.remove('is-clipped');\n  form.reset();\n  removeFields();\n}\n\ncreate.addEventListener('click', () => {\n  modal.classList.add('is-active');\n  html.classList.add('is-clipped');\n})\n\nmodalCloses.forEach(el => el.addEventListener('click', closeModal));\n\nconst dropdownFields = [{'name': 'Cardiologist',\n                         'heartpressure': 'field',\n                         'bmiindex': 'field',\n                         'heartdiseases': 'field',\n                         'age': 'field'}, \n                         {'name':'Dentist',\n                          'lastvisit': 'date'},\n                         {'name': 'Therapist',\n                          'age': 'field'}]\n\ndoctorselect.addEventListener('change', (e) => {\n  let {target: {value: doctor}} = e;\n\n  const obj = dropdownFields.find(el => doctor === el.name);\n  \n  removeFields(); \n  \n  for (let prop in obj) {\n    if (obj[prop] === 'field') {\n      let field = document.createElement('div');\n      field.classList.add('field', 'generated');\n      field.innerHTML = `<label class=\"label\">${prop}</label>\n      <div class=\"control\">\n        <input class=\"input\" name=\"${prop}\" type=\"text\" required>\n      </div>`\n\n      injectfield.after(field);\n\n    } else if (obj[prop] === 'date') {\n      let field = document.createElement('div');\n      field.classList.add('field', 'generated');\n      field.innerHTML = `<label class=\"label\">${prop}</label>\n      <div class=\"control\">\n        <input class=\"input\" name=\"${prop}\" type=\"date\" required>\n      </div>`\n      injectfield.after(field);\n    }\n  }\n\n});\n\nconst newCard = (fd) => {\n  let card;\n  if (fd.visitname === 'Cardiologist') {\n    card = new CardioVisit(fd.visitname, fd.date, fd.fullname, fd.purpose, fd.commentary = \"\", fd.pressure, fd.bmiindex, fd.heartdiseases, fd.age);\n  } else if (fd.visitname === 'Dentist') {\n    card = new DentistVisit(fd.visitname, fd.date, fd.fullname, fd.purpose, fd.commentary = \"\", fd.lastvisit);\n  } else if (fd.visitname === 'Therapist') {\n    card = new TherapistVisit(fd.visitname, fd.date, fd.fullname, fd.purpose, fd.commentary = \"\", fd.age);\n  }\n  card.draw();\n}\n\n\nsave.addEventListener('click', () => {\n  if (form.reportValidity()) {\n    let formIter = new FormData(form);\n    let formData = {}\n    for (let [key,val] of formIter.entries()) {\n      formData[key] = val;\n    }\n    newCard(formData);\n    closeModal();\n  }\n})\n\nclass Visit {\n  constructor(visitname, date, fullname, purpose, commentary) {\n    this.visitname = visitname;\n    this.date = date;\n    this.fullname = fullname;\n    this.purpose = purpose;\n    this.commentary = commentary;\n\n    this.element = document.createElement('div');\n    this.element.classList.add('card', 'card-size');\n    this.element.innerHTML = `\n    <header class=\"card-header\">\n      <p class=\"card-header-title\">${this.purpose}</p>\n      <span class=\"card-header-icon\">\n        <button class=\"delete\" aria-label=\"close\"></button>\n      </span>\n    </header>\n    <div class=\"card-content\">\n      <div class=\"content\">\n        <span class=\"pacient-name\">${this.fullname}</span>\n        <span class=\"doctor-visitname\">${this.visitname}</span>\n        <a href=\"#\" class=\"card-header-icon\" aria-label=\"more options\">\n          Show more...</a>\n      </div>`\n    this.element.onclick = this.onClick.bind(this);\n    this.element.style.cursor = 'pointer';\n  }\n  \n  onClick(e) {\n    if (e.target.classList.contains('delete')) {\n      this.element.remove();\n      }\n    }\n\n  draw() {\n    dashboard.appendChild(this.element);\n  }\n}\n\nclass CardioVisit extends Visit {\n  constructor(visitname, date, fullname, purpose, commentary, pressure, bmiindex, heartdiseases, age) {\n    super(visitname, date, fullname, purpose, commentary);\n    this.visitname = 'Cardiologist'\n    this.pressure = pressure;\n    this.bmiindex = bmiindex;\n    this.heartdiseases = heartdiseases;\n    this.age = age;\n  }\n}\n\nclass DentistVisit extends Visit {\n  constructor(visitname, date, fullname, purpose, commentary, lastvisit) {\n    super(visitname, date, fullname, purpose, commentary);\n    this.visitname = 'Dentist'\n    this.lastvisit = lastvisit;\n  }\n}\n\nclass TherapistVisit extends Visit {\n  constructor(visitname, date, fullname, purpose, commentary, age) {\n    super(visitname, date, fullname, purpose, commentary);\n    this.visitname = 'Therapist'\n    this.age = age;\n  }\n}\n\n"]}